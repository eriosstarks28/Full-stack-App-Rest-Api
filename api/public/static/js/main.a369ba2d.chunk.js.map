{"version":3,"sources":["components/UserSignUp.js","components/UserSignIn.js","components/Courses.js","components/CourseDetail.js","components/CreateCourse.js","components/UpdateCourse.js","components/Error.js","components/Config.js","Data.js","Context.js","PrivateRoute.js","App.js","components/Header.js","components/UserSignOut.js","serviceWorker.js","index.js"],"names":["UserSignUp","state","firstName","lastName","emailAddress","password","errors","change","event","name","target","value","setState","submit","preventDefault","context","props","user","data","createUser","then","length","actions","signIn","history","push","catch","err","console","log","cancel","this","className","Fragment","map","index","key","onSubmit","onChange","id","type","placeholder","onClick","to","Component","UserSignIn","from","location","pathname","error","Courses","courses","getCourses","res","course","title","version","xmlns","x","y","viewBox","points","Markdown","require","CourseDetail","delete","authenticatedUser","courseId","match","params","deleteCourse","getCourse","materials","materialsNeeded","description","estimatedTime","source","CreateCourse","userId","createCourse","UpdateCourse","author","updateCourse","Error","Data","path","method","body","requiresAuth","credentials","url","Config","options","headers","JSON","stringify","encodedCredentials","btoa","fetch","api","response","status","json","statusText","Context","React","createContext","Provider","Cookies","getJSON","a","getUser","set","expires","signOut","remove","children","Consumer","withContext","component","rest","render","HeaderWithContext","authUser","UserSignUpWithContext","UserSignInWithContext","UserSignOutWithContext","CoursesWithContext","CourseDetailWithContext","CreateCourseWithContext","UpdateCourseWithContext","exact","PrivateRoute","Boolean","window","hostname","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a369ba2d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class UserSignUp extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    emailAddress: \"\",\n    password: \"\",\n    errors: [],\n  };\n\n  render() {\n    const { firstName, lastName, emailAddress, password, errors } = this.state;\n\n    return (\n      <div className=\"bounds\">\n        <div className=\"grid-33 centered signin\">\n          <h1>Sign Up</h1>\n          <div>\n            {errors.length ? (\n              <React.Fragment>\n                <h2 className=\"validation--errors--label\">Validation errors</h2>\n                <div className=\"validation-errors\">\n                  <ul>\n                    {errors.map((err, index) => (\n                      <li key={index}>{err}</li>\n                    ))}\n                  </ul>\n                </div>\n              </React.Fragment>\n            ) : (\n              <hr />\n            )}\n            <form onSubmit={this.submit}>\n              <input\n                onChange={this.change}\n                id=\"firstName\"\n                name=\"firstName\"\n                type=\"text\"\n                className=\"\"\n                placeholder=\"First Name\"\n                value={firstName}\n              />\n              <input\n                onChange={this.change}\n                id=\"lastName\"\n                name=\"lastName\"\n                type=\"text\"\n                className=\"\"\n                placeholder=\"Last Name\"\n                value={lastName}\n              />\n              <input\n                onChange={this.change}\n                id=\"emailAddress\"\n                name=\"emailAddress\"\n                type=\"text\"\n                className=\"\"\n                placeholder=\"Email Address\"\n                value={emailAddress}\n              />\n              <input\n                onChange={this.change}\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                className=\"\"\n                placeholder=\"Password\"\n                value={password}\n              />\n              <div className=\"grid-100 pad-bottom\">\n                <button className=\"button\" type=\"submit\">\n                  Sign Up\n                </button>\n                <button\n                  className=\"button button-secondary\"\n                  onClick={this.cancel}\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n          <p>&nbsp;</p>\n          <p>\n            Already have a user account? <Link to=\"/signin\">Click here</Link> to\n            sign in!\n          </p>\n        </div>\n      </div>\n    );\n  }\n  \n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value,\n      };\n    });\n  };\n\n  submit = (event) => {\n    event.preventDefault();\n    const { context } = this.props;\n    \n\n    const {\n      firstName,\n      lastName,\n      emailAddress,\n      password,\n      \n      \n    } = this.state;\n\n    \n    const user = {\n      firstName,\n      lastName,\n      emailAddress,\n      password,\n    };\n\n    context.data\n      .createUser(user)\n      .then((errors) => {\n        if (errors.length) {\n          this.setState({ errors: errors });\n        } else {\n          context.actions.signIn(emailAddress, password);\n          this.props.history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        this.props.history.push(\"/error\");\n      });\n  };\n\n  cancel = (event) => {\n    event.preventDefault();\n    this.props.history.push(\"/\");\n  };\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class UserSignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailAddress: \"\",\n      password: \"\",\n      errors: [],\n    };\n  }\n\n  render() {\n    const { emailAddress, password, errors } = this.state;\n\n    return (\n      <div className=\"bounds\">\n        <div className=\"grid-33 centered signin\">\n          <h1>Sign in</h1>\n          <div>\n            {errors.length ? (\n              <React.Fragment>\n                <h2 className=\"validation--errors--label\">Validation errors</h2>\n                <div className=\"validation-errors\">\n                  <ul>\n                    {errors.map((err, index) => (\n                      <li key={index}>{err}</li>\n                    ))}\n                  </ul>\n                </div>\n              </React.Fragment>\n            ) : (\n              <hr />\n            )}\n            <form onSubmit={this.submit}>\n              <input\n                onChange={this.change}\n                id=\"emailAddress\"\n                name=\"emailAddress\"\n                type=\"text\"\n                className=\"\"\n                placeholder=\"Email Address\"\n                value={emailAddress}\n              />\n              <input\n                onChange={this.change}\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                className=\"\"\n                placeholder=\"Password\"\n                value={password}\n              />\n              <div className=\"grid-100 pad-bottom\">\n                <button className=\"button\" type=\"submit\">\n                  Sign in\n                </button>\n                <button\n                  className=\"button button-secondary\"\n                  onClick={this.cancel}\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n          <p>&nbsp;</p>\n          <p>\n            Dont have a user account? <Link to=\"/signUp\">Click here</Link> to\n            sign up!\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  submit = (event) => {\n    event.preventDefault();\n    const { context } = this.props;\n    const { from } = this.props.location.state || {\n      from: { pathname: \"/\" },\n    };\n    const { emailAddress, password } = this.state;\n\n    context.actions\n      .signIn(emailAddress, password)\n      .then((user) => {\n        console.log(password);\n        if (user === null) {\n          this.setState(() => {\n            return { errors: [\"Sign-in was unsuccessful\"] };\n          });\n        } else {\n          this.props.history.push(from);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        this.props.history.push(\"/error\");\n      });\n  };\n\n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value,\n      };\n    });\n  };\n\n  cancel = (event) => {\n    event.preventDefault();\n    this.props.history.push(\"/\");\n  };\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Courses extends Component {\n  \n    state = {\n      courses: [],\n \n    };\n\n    //mount the component and get a full list of courses \n  \n  componentDidMount() {\n    const { context } = this.props;\n\n    context.data\n      .getCourses()\n      .then((res) => {\n        this.setState({ courses: res });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.props.history.push(\"/error\");\n      });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"bounds\">\n          {this.state.courses.map((course) => {\n            return (\n              <div key={course.id} className=\"grid-33\">\n                <Link\n                  className=\"course--module course--link\"\n                  to={`/courses/${course.id}`}\n                >\n                  <h4 className=\"course--label\">Course</h4>\n                  <h3 className=\"course--title\">{course.title}</h3>\n                </Link>\n              </div>\n            );\n          })}\n\n          <div className=\"grid-33\">\n            <Link\n              to=\"/courses/create\"\n              className=\"course--module course--add--module\"\n            >\n              <h3 className=\"course--add--title\">\n                <svg\n                  version=\"1.1\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  x=\"0px\"\n                  y=\"0px\"\n                  viewBox=\"0 0 13 13\"\n                  className=\"add\"\n                >\n                  <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\n                </svg>\n                New Course\n              </h3>\n            </Link>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Markdown = require(\"react-markdown\");\n\nexport default class CourseDetail extends Component {\n  state = {\n    course: [],\n    user: [],\n  };\n\n  componentDidMount() {\n    const { context } = this.props;\n    const { id } = this.props.match.params;\n\n    //Grab each course using async function getCourse() and set the state\n    \n    context.data.getCourse(id).then((res) => {\n      this.setState({\n        course: res,\n        user: res.user,\n        materials: res.materialsNeeded,\n        authenticatedUser: context.authenticatedUser,\n      });\n    });\n  }\n\n  //Delete function only avaliable to authorized users removes course from database \n  delete = () => {\n    if (this.props.context.authenticatedUser) {\n      const { password, emailAddress } = this.props.context.authenticatedUser;\n      let courseId = this.props.match.params.id;\n      this.props.context.data\n        .deleteCourse(courseId, emailAddress, password)\n        .then((errors) => {\n          if (errors.length) {\n            this.setState({ errors });\n          } else this.props.history.push(\"/\");\n        });\n    } else {\n      this.props.history.push(\"/forbidden\");\n    }\n  };\n\n  render() {\n    const { course, user, authenticatedUser } = this.state;\n\n    return (\n      <div>\n        <div className=\"actions--bar\">\n          <div className=\"bounds\">\n            <div className=\"grid-100\">\n              <span>\n                {authenticatedUser ? (\n                  authenticatedUser.emailAddress === user.emailAddress ? (\n                    <React.Fragment>\n                      <Link\n                        className=\"button\"\n                        to={`/courses/${course.id}/update`}\n                      >\n                        Update Course\n                      </Link>\n                      <button className=\"button\" onClick={() => this.delete()}>\n                        Delete Course\n                      </button>\n                    </React.Fragment>\n                  ) : (\n                    <hr />\n                  )\n                ) : (\n                  <hr />\n                )}\n              </span>\n              <Link className=\"button button-secondary\" to=\"/\">\n                Return to List\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"bounds course--detail\">\n          <div className=\"grid-66\">\n            <div className=\"course--header\">\n              <h4 className=\"course--label\">Course</h4>\n              <h3 className=\"course--title\">{course.title}</h3>\n              <p>\n                {\" \"}\n                By {user.firstName} {user.lastName}\n              </p>\n            </div>\n            <div className=\"course--description\">\n              <p>{course.description}</p>\n            </div>\n          </div>\n          <div className=\"grid-25 grid-right\">\n            <div className=\"course--stats\">\n              <ul className=\"course--stats--list\">\n                <li className=\"course--stats--list--item\">\n                  <h4>Estimated Time</h4>\n                  <h3>{course.estimatedTime}</h3>\n                </li>\n                <li className=\"course--stats--list--item\">\n                  <h4>Materials Needed</h4>\n                  <ul>\n                    <Markdown source={course.materialsNeeded} />\n                  </ul>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class CreateCourse extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    estimatedTime: \"\",\n    materialsNeeded: \"\",\n    userId: null,\n    errors: [],\n  };\n\n  //creates course passing course email and password perams\n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value,\n      };\n    });\n  };\n\n  submit = (event) => {\n    event.preventDefault();\n    const { context } = this.props;\n    const authenticatedUser = context.authenticatedUser;\n    const { emailAddress, password, id } = authenticatedUser;\n\n    const { title, description, estimatedTime, materialsNeeded } = this.state;\n\n    const course = {\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n      userId: id,\n    };\n\n    context.data\n      .createCourse(course, emailAddress, password)\n      .then((errors) => {\n        if (errors) {\n          this.setState({ errors: errors.errors });\n        } else {\n          this.props.history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        this.props.history.push(\"/error\");\n      });\n  };\n\n  cancel = (event) => {\n    event.preventDefault();\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { context } = this.props;\n\n    const {\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n      errors,\n    } = this.state;\n\n    return (\n      <div className=\"bounds course--detail\">\n        <h1>Create Course</h1>\n        <div>\n          {errors.length ? (\n            <React.Fragment>\n              <h2 className=\"validation--errors--label\">Validation errors</h2>\n              <div className=\"validation-errors\">\n                <ul>\n                  {errors.map((err, index) => (\n                    <li key={index}>{err}</li>\n                  ))}\n                </ul>\n              </div>\n            </React.Fragment>\n          ) : (\n            <hr />\n          )}\n          <form onSubmit={this.submit}>\n            <div className=\"grid-66\">\n              <div className=\"course--header\">\n                <h4 className=\"course--label\">Course</h4>\n                <div>\n                  <input\n                    onChange={this.change}\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\"\n                    className=\"input-title course--title--input\"\n                    placeholder=\"Course title...\"\n                    value={title}\n                  />\n                </div>\n              </div>\n\n              <div className=\"course--description\">\n                <h4 className=\"course--label\">Description</h4>\n                <div>\n                  <textarea\n                    onChange={this.change}\n                    id=\"description\"\n                    name=\"description\"\n                    className=\"\"\n                    placeholder=\"Course description...\"\n                    value={description}\n                  ></textarea>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"grid-25 grid-right\">\n              <div className=\"course--stats\">\n                <ul className=\"course--stats--list\">\n                  <li className=\"course--stats--list--item\">\n                    <h4>Estimated Time</h4>\n                    <div>\n                      <input\n                        onChange={this.change}\n                        id=\"estimatedTime\"\n                        name=\"estimatedTime\"\n                        type=\"text\"\n                        className=\"course--time--input\"\n                        placeholder=\"Hours\"\n                        value={estimatedTime}\n                      />\n                    </div>\n                  </li>\n\n                  <li className=\"course--stats--list--item\">\n                    <h4>Materials Needed</h4>\n                    <div>\n                      <textarea\n                        onChange={this.change}\n                        id=\"materialsNeeded\"\n                        name=\"materialsNeeded\"\n                        className=\"\"\n                        placeholder=\"Please list each material...\"\n                        value={materialsNeeded}\n                      ></textarea>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"grid-100 pad-bottom\">\n              <button className=\"button\" type=\"submit\">\n                Create Course\n              </button>\n              <button className=\"button button-secondary\" onClick={this.cancel}>\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class UpdateCourse extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    materialsNeeded: \"\",\n    estimatedTime: \"\",\n    author: [],\n    errors: [],\n  };\n\n  componentDidMount() {\n    const { context } = this.props;\n    const { id } = this.props.match.params;\n\n    \n    context.data.getCourse(id)\n        .then((course) => {\n          if (course) {\n            this.setState({\n              title: course.title,\n              author: course.user,\n              description: course.description,\n              estimatedTime: course.estimatedTime,\n              materialsNeeded: course.materialsNeeded,\n            });\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.history.push(\"/error\");\n        });\n    }\n\n  render() {\n    const {\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n      errors\n    } = this.state;\n\n    return (\n      <div className=\"bounds course--detail\">\n        <h1>Update Course</h1>\n        <div>\n          {errors.length ? \n            <React.Fragment>\n              <h2 className=\"validation--errors--label\">Validation errors</h2>\n              <div className=\"validation-errors\">\n                <ul>\n                  {errors.map((err, index) =>\n                    <li key={index}>{err}</li>\n                  )}\n                </ul> \n              </div>\n            </React.Fragment>\n            : \n            <hr />\n          }\n          <form onSubmit={this.submit}>\n            <div className=\"grid-66\">\n              <div className=\"course--header\">\n                <h4 className=\"course--label\">Course</h4>\n                <div>\n                  <input onChange={this.change} id=\"title\" name=\"title\" type=\"text\" className=\"input-title course--title--input\" placeholder=\"Course title...\" value={title} />\n                </div>\n              </div>\n\n              <div className=\"course--description\">\n                <h4 className=\"course--label\">Description</h4>\n                <div>\n                  <textarea onChange={this.change} id=\"description\" name=\"description\" className=\"\" placeholder=\"Course description...\" value={description}></textarea>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"grid-25 grid-right\">\n              <div className=\"course--stats\">\n                <ul className=\"course--stats--list\">\n                  <li className=\"course--stats--list--item\">\n                    <h4>Estimated Time</h4>\n                    <div>\n                      <input onChange={this.change} id=\"estimatedTime\" name=\"estimatedTime\" type=\"text\" className=\"course--time--input\" placeholder=\"Hours\" value={estimatedTime} />\n                    </div>\n                  </li>\n                  \n                  <li className=\"course--stats--list--item\">\n                    <h4>Materials Needed</h4>\n                    <div><textarea onChange={this.change} id=\"materialsNeeded\" name=\"materialsNeeded\" className=\"\" placeholder=\"Please list each material...\" value={materialsNeeded}></textarea></div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            \n            <div className=\"grid-100 pad-bottom\">\n              <button className=\"button\" type=\"submit\">Update Course</button>\n              <button className=\"button button-secondary\" onClick={this.cancel}>Cancel</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n\n\n\n\n  submit = (event) => {\n    event.preventDefault();\n    const { context } = this.props;\n    const { emailAddress } = context.authenticatedUser;\n    const { password } = context.authenticatedUser;\n    const { id } = this.props.match.params;\n\n\n    const {\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n    } = this.state;\n\n   \n    const course = {\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n    }\n\n//updates course passing course, email and password perams \n\n    context.data.updateCourse(id, course, emailAddress, password)\n    .then(errors => {\n      if (errors.errors) {\n        this.setState({ errors: errors.errors});\n      } else {\n        this.props.history.push('/');\n      }\n    })\n    .catch( err => { \n      console.log(err);\n      this.props.history.push('/error');\n    })\n  }\n\n  \n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n\n  cancel = () => {\n   const  courseId = this.props.match.params.id;\n    const { from } = this.props.location.state || {\n      from: { pathname: `/courses/${courseId}` },\n    };\n    this.props.history.push(from);\n  };\n}\n\n\n","import React from 'react';\n\nexport default function Error() {\n  return (\n    <div className=\"bounds\">\n      <h1>Error</h1>\n      <p>Sorry! We just encountered an unexpected error.</p>\n    </div>\n  );\n}","export default {\n    apiBaseUrl: \"http://localhost:5000/api\",\n  }; ","import Config from \"./components/Config\";\n\nexport default class Data {\n  api(\n    path,\n    method = \"GET\",\n    body = null,\n    requiresAuth = false,\n    credentials = null\n  ) {\n    const url = Config.apiBaseUrl + path;\n\n    const options = {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n    };\n\n    if (body !== null) {\n      options.body = JSON.stringify(body);\n    }\n\n    if (requiresAuth) {\n      const encodedCredentials = btoa(\n        `${credentials.emailAddress}:${credentials.password}`\n      );\n      options.headers[\"Authorization\"] = `Basic ${encodedCredentials}`;\n    }\n    return fetch(url, options);\n  }\n\n  // Create a new user & catch any errors from the server\n\n  async createUser(user) {\n    const response = await this.api(\"/users\", \"POST\", user);\n    if (response.status === 201) {\n      return [];\n    } else if (\n      response.status === 400 ||\n      response.status === 405 ||\n      response.status === 500\n    ) {\n      return response.json().then((data) => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n/////////////////////////////////////////////////////////////////////////////\n\n\n  async getUser(emailAddress, password) {\n    const response = await this.api(`/users`, \"GET\", null, true, {\n      emailAddress,\n      password,\n    });\n    if (response.status === 200) {\n      return response.json().then((data) => data);\n    } else if (response.status === 401) {\n      return null;\n    } else {\n      throw new Error();\n    }\n  }\n\n  // create a new course/////////////////////////////////////////////////////\n\n  async createCourse(course, emailAddress, password) {\n    const response = await this.api(`/courses`, \"POST\", course, true, {\n      emailAddress,\n      password,\n    });\n    if (response.status === 201) {\n      return null;\n    } else if (response.status === 400) {\n      return response.json().then((data) => {\n        return data;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n  //get full list of courses////////////////////////////////////////////////////\n\n\n\n\n  async getCourses() {\n    const response = await this.api(`/courses`, \"GET\", null, false, null);\n    if (response.status === 200 || 304) {\n      return response.json().then((data) => data);\n    } else if (response.status === 404) {\n      console.log(response);\n      return null;\n    } else {\n      throw new Error();\n    }\n  }\n\n\n\n//get specific course by id/////////////////////////////////////////////////////\n\n\n\n  async getCourse(id) {\n    const response = await this.api(`/courses/${id}`, \"GET\", null, false, null);\n    if (response.status === 200 || 304) {\n      return response.json().then((data) => data);\n    } else if (response.status === 404) {\n      console.log(response.status);\n      console.log(response.statusText);\n      return null;\n    } else {\n      throw new Error();\n    }\n  }\n  //updaate a course if authorized////////////////////////////////////////////////\n\n\n\n\n  async updateCourse(id, course, emailAddress, password) {\n    const response = await this.api(`/courses/${id}`, \"PUT\", course, true, {\n      emailAddress,\n      password,\n    });\n    if (response.status === 204) {\n      return [];\n    } else if (\n      response.status === 400 ||\n      response.status === 401 ||\n      response.status === 403\n    ) {\n      return response.json().then((data) => {\n        return data;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n\n  /////////////////////////////////////////////////////////////////////////////////\n\n\n  \n  async deleteCourse(courseId, emailAddress, password) {\n    const response = await this.api(\n      `/courses/${courseId}`,\n      \"DELETE\",\n      null,\n      true,\n      { emailAddress, password }\n    );\n    if (response.status === 200 || 304) {\n      return [];\n    } else if (response.status === 403) {\n      return response.json().then((data) => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport Cookies from \"js-cookie\";\nimport Data from \"./Data\";\n\nconst Context = React.createContext();\n\nexport class Provider extends Component {\n  state = {\n    authenticatedUser: Cookies.getJSON(\"authenticatedUser\") || null,\n    \n  };\n\n  constructor() {\n    super();\n    this.data = new Data();\n  }\n\n  render() {\n    const { authenticatedUser } = this.state;\n    \n    const value = {\n      authenticatedUser,\n      data: this.data,\n      actions: {\n        signIn: this.signIn,\n        signOut: this.signOut,\n      },\n    };\n    return (\n      <Context.Provider value={value}>{this.props.children}</Context.Provider>\n    );\n  }\n\n  \n  signIn = async (emailAddress, password) => {\n    const user = await this.data.getUser(emailAddress, password); \n    if (user !== null) {\n      user.password = password\n      this.setState(() => {\n        return {\n          authenticatedUser: user, \n        }; \n      });\n      Cookies.set(\"authenticatedUser\", JSON.stringify(user), {expires: 1 }); \n    }\n    return user;\n  };\n\n\n\n  signOut = () => {\n    this.setState({ authenticatedUser: null }); \n    Cookies.remove(\"authenticatedUser\"); \n  };\n}\n\nexport const Consumer = Context.Consumer;\n\n\n\nexport default function withContext(Component) {\n  return function ContextComponent(props) {\n    return (\n      <Context.Consumer>\n        {context => <Component {...props} context={context} />}\n      </Context.Consumer>\n    );\n  }\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Consumer } from './Context';\n\nexport default ({ component: Component, ...rest }) => {\n\n  \n\n  return (\n    <Consumer>\n      {(context) => (\n        <Route\n          {...rest}\n          render={(props) =>\n            context.authenticatedUser ? (\n              <Component {...props} />\n            ) : (\n              <Redirect\n                to={{\n                  pathname: '/error',\n                  state: { from: props.location },\n                }}\n              />\n            )\n          }\n        />\n      )}\n    </Consumer>\n  );\n};","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport UserSignUp from \"./components/UserSignUp\";\nimport UserSignIn from \"./components/UserSignIn\";\nimport UserSignOut from \"./components/UserSignOut\";\nimport Courses from \"./components/Courses\";\nimport CourseDetail from \"./components/CourseDetail\";\nimport CreateCourse from \"./components/CreateCourse\";\nimport UpdateCourse from \"./components/UpdateCourse\";\nimport Error from \"./components/Error\";\n\nimport withContext from \"./Context\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst HeaderWithContext = withContext(Header);\nconst UserSignUpWithContext = withContext(UserSignUp);\nconst UserSignInWithContext = withContext(UserSignIn);\nconst UserSignOutWithContext = withContext(UserSignOut);\nconst CoursesWithContext = withContext(Courses);\nconst CourseDetailWithContext = withContext(CourseDetail);\nconst CreateCourseWithContext = withContext(CreateCourse);\nconst UpdateCourseWithContext = withContext(UpdateCourse);\n\nexport default () => (\n  <Router>\n    <div>\n      <HeaderWithContext />\n\n      <Switch>\n        <Route exact path=\"/\" component={CoursesWithContext} />\n        <PrivateRoute\n          exact\n          path=\"/courses/create\"\n          component={CreateCourseWithContext}\n        />\n        <Route exact path=\"/courses/:id\" component={CourseDetailWithContext} />;\n        <PrivateRoute\n          exact\n          path=\"/courses/:id/update\"\n          component={UpdateCourseWithContext}\n        />\n        <Route exact path=\"/signin\" component={UserSignInWithContext} />\n        <Route exact path=\"/signup\" component={UserSignUpWithContext} />\n        <Route exact path=\"/signout\" component={UserSignOutWithContext} />\n        <Route exact path=\"/error\" component={Error} />\n      </Switch>\n    </div>\n  </Router>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Header(props) {\n    const { context } = props;\n    const authUser = context.authenticatedUser;\n    return (\n      <div className=\"header\">\n        <div className=\"bounds\">\n          <h1 className=\"header--logo\">My FullStack API </h1>\n          \n          <nav>\n            {authUser ? (\n              <React.Fragment>\n                <span>Welcome, {authUser.firstName}!</span>\n                <Link className=\"Button\" to=\"/\">Home</Link>\n\n                <Link to=\"/signout\">Sign Out</Link>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Link className=\"Button\" to=\"/\">Home</Link>\n                <Link className=\"signup\" to=\"/signup\">Sign Up</Link>\n                <Link className=\"signin\" to=\"/signin\">Sign In</Link>\n              </React.Fragment>\n            )}\n          </nav>\n        </div>\n      </div>\n    );\n  }\n\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default ({context}) => {\n  context.actions.signOut();\n\n  return (\n    <Redirect to=\"/\" />\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport \"./styles/global.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"./Context\";\n\n\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}